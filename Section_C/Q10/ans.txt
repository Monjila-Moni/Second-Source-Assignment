Q: Explain the difference between props and state in React. Provide example.

Props:
-----------------------------
Props are known as properties it can be used to pass data from one component(parent) to another(child). Props cannot be modified, read-only(A component cannot change its own props), and Immutable. It helps in making component reusable and dynamic. props passed as attributes when a component is used.

Example: Here the fruits prop is passed and data is displayed in the fruit component.

App.js:
        import Fruit from './Fruit'
        function App() {

            const fruits =
            {
                name: "Mango",
                color: "Yellow"
            }

            return (
                <div className="App">
                    <Fruit fruits={fruits} />
                </div>
            );
        }

        export default App;

The following will be the output when we execute the above command. The data will be passed from the Parent component i.e. App.js to the Child component i.e. Fruit.js with the usage of the "Props" feature.

Fruit.js:
        import React from "react"

        const Fruit = (props) => {

            return (
                <div className="fruit">
                    <h1>List of Fruits</h1>
                    <p>Name: {props.fruits.name}</p>
                    <p>Color: {props.fruits.color}</p>
                </div>
            )
        }

        export default Fruit;



State:
--------------------
The state represents parts of an Application that can change. Each component can have its State. The state is Mutable and It is local to the component only.

Example: 
    import { useState } from 'react';

    function Counter() {
    const [count, setCount] = useState(0);

    return (
        <>
        <p>You clicked {count} times</p>
        <button onClick={() => setCount(count + 1)}>Click me</button>
        </>
    );
    }
